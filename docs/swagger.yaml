definitions:
  dao.GatewayServiceAccessControl:
    properties:
      blackList:
        description: 黑名单ip
        type: string
      clientipFlowLimit:
        description: 客户端ip限流
        type: integer
      id:
        description: 自增主键
        type: integer
      openAuth:
        description: 是否开启权限 1=开启
        type: integer
      serviceFlowLimit:
        description: 服务端限流
        type: integer
      serviceID:
        description: 服务id
        type: integer
      whiteHostName:
        description: 白名单主机
        type: string
      whiteList:
        description: 白名单ip
        type: string
    type: object
  dao.GatewayServiceHttpRule:
    properties:
      headerTransfor:
        description: 'header转换支持增加(add)、删除(del)、修改(edit) 格式: add headname headvalue
          多个逗号间隔'
        type: string
      id:
        description: 主键id
        type: integer
      needHttps:
        description: 支持https 1=支持
        type: integer
      needStripUri:
        description: 启用strip_uri 1=启用
        type: integer
      needWebsocket:
        description: 是否支持websocket 1=支持
        type: integer
      rule:
        description: type=domain表示域名，type=url_prefix时表示url前缀
        type: string
      ruleType:
        description: 匹配类型 0=url前缀url_prefix 1=域名domain
        type: integer
      serviceID:
        description: 服务id
        type: integer
      urlRewrite:
        description: url重写功能 格式：^/gatekeeper/test_service(.*) $1 多个逗号间隔
        type: string
    type: object
  dao.GatewayServiceInfo:
    properties:
      create_at:
        description: 添加时间
        type: string
      id:
        description: 主键id
        type: integer
      is_delete:
        description: 是否删除
        type: integer
      load_type:
        description: 服务类型
        type: integer
      service_desc:
        description: 服务描述
        type: string
      service_name:
        description: 服务名称
        type: string
      update_at:
        description: 更新时间
        type: string
    type: object
  dao.GatewayServiceLoadBalance:
    properties:
      checkInterval:
        description: 检查间隔, 单位s
        type: integer
      checkMethod:
        description: 检查方法 0=tcpchk,检测端口是否握手成功
        type: string
      checkTimeout:
        description: check超时时间,单位s
        type: integer
      forbidList:
        description: 禁用ip列表
        type: string
      id:
        description: 主键id
        type: integer
      iplist:
        description: ip列表
        type: string
      roundType:
        description: 轮询方式 0=random 1=round-robin 2=weight_round-robin 3=ip_hash
        type: integer
      serviceID:
        description: 服务id
        type: integer
      upstreamConnectTimeout:
        description: 建立连接超时, 单位s
        type: integer
      upstreamHeaderTimeout:
        description: 获取header超时, 单位s
        type: integer
      upstreamIdleTimeout:
        description: 链接最大空闲时间, 单位s
        type: integer
      upstreamMaxIdle:
        description: 最大空闲链接数
        type: integer
      weightList:
        description: 权重列表
        type: string
    type: object
  dao.GrpcRule:
    properties:
      header_transfor:
        type: string
      id:
        type: integer
      port:
        type: integer
      service_id:
        type: integer
    type: object
  dao.ServiceDetail:
    properties:
      access_control:
        $ref: '#/definitions/dao.GatewayServiceAccessControl'
      grpc_rule:
        $ref: '#/definitions/dao.GrpcRule'
      http_rule:
        $ref: '#/definitions/dao.GatewayServiceHttpRule'
      info:
        $ref: '#/definitions/dao.GatewayServiceInfo'
      load_balance:
        $ref: '#/definitions/dao.GatewayServiceLoadBalance'
      tcp_rule:
        $ref: '#/definitions/dao.TcpRule'
    type: object
  dao.TcpRule:
    properties:
      id:
        type: integer
      port:
        description: 端口
        type: integer
      service_id:
        description: 服务id
        type: integer
    type: object
  dto.AdminInfoOutput:
    properties:
      avatar:
        type: string
      id:
        type: integer
      introduction:
        type: string
      login_time:
        type: string
      roles:
        items:
          type: string
        type: array
      user_name:
        type: string
    type: object
  dto.AdminLoginInput:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  dto.AdminLoginOutput:
    properties:
      token:
        example: token
        type: string
    type: object
  dto.ChangePwdInput:
    properties:
      password:
        example: "123456"
        type: string
    required:
    - password
    type: object
  dto.ServiceAddTcpInput:
    properties:
      black_list:
        type: string
      clientip_flow_limit:
        type: integer
      forbid_list:
        type: string
      header_transfor:
        type: string
      ip_list:
        type: string
      open_auth:
        type: integer
      port:
        maximum: 8999
        minimum: 8001
        type: integer
      round_type:
        type: integer
      service_desc:
        type: string
      service_flow_limit:
        type: integer
      service_name:
        type: string
      weight_list:
        type: string
      white_host_name:
        type: string
      white_list:
        type: string
    required:
    - ip_list
    - port
    - service_desc
    - service_name
    - weight_list
    type: object
  dto.ServiceListItemOutput:
    properties:
      id:
        type: integer
      load_type:
        type: integer
      qpd:
        type: integer
      qps:
        type: integer
      service_addr:
        type: string
      service_desc:
        type: string
      service_name:
        type: string
      total_node:
        type: integer
    type: object
  dto.ServiceListOutput:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.ServiceListItemOutput'
        type: array
      total:
        type: integer
    type: object
  middleware.Response:
    properties:
      data: {}
      errmsg:
        type: string
      errno:
        $ref: '#/definitions/middleware.ResponseCode'
      stack: {}
      trace_id: {}
    type: object
  middleware.ResponseCode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 401
    - 1000
    - 2001
    type: integer
    x-enum-varnames:
    - SuccessCode
    - UndefErrorCode
    - ValidErrorCode
    - InternalErrorCode
    - InvalidRequestErrorCode
    - CustomizeCode
    - GROUPALL_SAVE_FLOWERROR
info:
  contact: {}
paths:
  /admin/admin_info:
    get:
      consumes:
      - application/json
      description: 管理员信息
      operationId: /admin/admin_info
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminInfoOutput'
              type: object
      summary: 管理员信息
      tags:
      - 管理员接口
  /admin/change_pwd:
    post:
      consumes:
      - application/json
      description: 修改密码
      operationId: /admin/change_pwd
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ChangePwdInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 修改密码
      tags:
      - 管理员接口
  /admin_login/login:
    post:
      consumes:
      - application/json
      description: 管理员登陆
      operationId: /admin_login/login
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.AdminLoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.AdminLoginOutput'
              type: object
      summary: 管理员登陆
      tags:
      - 管理员接口
  /admin_login/logout:
    get:
      consumes:
      - application/json
      description: 管理员退出
      operationId: /admin_login/logout
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 管理员退出
      tags:
      - 管理员接口
  /service/service_add_tcp:
    post:
      consumes:
      - application/json
      description: tcp服务添加
      operationId: /service/service_add_tcp
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ServiceAddTcpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: tcp服务添加
      tags:
      - 服务管理
  /service/service_delete:
    get:
      consumes:
      - application/json
      description: 服务删除
      operationId: /service/service_delete
      parameters:
      - description: 服务ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 服务删除
      tags:
      - 服务管理
  /service/service_detail:
    get:
      consumes:
      - application/json
      description: 服务详情
      operationId: /service/service_detail
      parameters:
      - description: 服务ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/dao.ServiceDetail'
              type: object
      summary: 服务详情
      tags:
      - 服务管理
  /service/service_list:
    get:
      consumes:
      - application/json
      description: 服务列表
      operationId: /service/service_list
      parameters:
      - description: 关键词
        in: query
        name: info
        type: string
      - description: 每页个数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 当前页数
        in: query
        name: page_no
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/middleware.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ServiceListOutput'
              type: object
      summary: 服务列表
      tags:
      - 服务管理
swagger: "2.0"
